// Generated by view binder compiler. Do not edit!
package vn.edu.usth.pj.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager2.widget.ViewPager2;
import com.google.android.material.bottomappbar.BottomAppBar;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import vn.edu.usth.pj.R;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final BottomAppBar bottomappbar;

  @NonNull
  public final BottomNavigationView bottomnavigationbar;

  @NonNull
  public final ConstraintLayout content;

  @NonNull
  public final CoordinatorLayout coordinator;

  @NonNull
  public final FrameLayout framecontainer;

  @NonNull
  public final FloatingActionButton person;

  @NonNull
  public final ViewPager2 reFrame;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView,
      @NonNull BottomAppBar bottomappbar, @NonNull BottomNavigationView bottomnavigationbar,
      @NonNull ConstraintLayout content, @NonNull CoordinatorLayout coordinator,
      @NonNull FrameLayout framecontainer, @NonNull FloatingActionButton person,
      @NonNull ViewPager2 reFrame) {
    this.rootView = rootView;
    this.bottomappbar = bottomappbar;
    this.bottomnavigationbar = bottomnavigationbar;
    this.content = content;
    this.coordinator = coordinator;
    this.framecontainer = framecontainer;
    this.person = person;
    this.reFrame = reFrame;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomappbar;
      BottomAppBar bottomappbar = ViewBindings.findChildViewById(rootView, id);
      if (bottomappbar == null) {
        break missingId;
      }

      id = R.id.bottomnavigationbar;
      BottomNavigationView bottomnavigationbar = ViewBindings.findChildViewById(rootView, id);
      if (bottomnavigationbar == null) {
        break missingId;
      }

      ConstraintLayout content = (ConstraintLayout) rootView;

      id = R.id.coordinator;
      CoordinatorLayout coordinator = ViewBindings.findChildViewById(rootView, id);
      if (coordinator == null) {
        break missingId;
      }

      id = R.id.framecontainer;
      FrameLayout framecontainer = ViewBindings.findChildViewById(rootView, id);
      if (framecontainer == null) {
        break missingId;
      }

      id = R.id.person;
      FloatingActionButton person = ViewBindings.findChildViewById(rootView, id);
      if (person == null) {
        break missingId;
      }

      id = R.id.reFrame;
      ViewPager2 reFrame = ViewBindings.findChildViewById(rootView, id);
      if (reFrame == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, bottomappbar, bottomnavigationbar,
          content, coordinator, framecontainer, person, reFrame);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
